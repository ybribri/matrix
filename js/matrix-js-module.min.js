export class Matrix{#t;constructor(t,i){null!=t&&null!=i&&(this.row=t,this.column=i,this.#t=Array.from({length:this.row},(t=>Array.from({length:this.column},(t=>null)))))}get value(){return this.#t}set value(t){return!!Array.isArray(t)&&(this.#t=t,this.row=this.#t.length,this.column=this.#t[0].length,!0)}getValueOf(t=[0,0]){const[i,r]=this.#i(t);if(!(i<0||i>this.row-1||r<0||r>this.#t[i].length-1))return this.#t[i][r]}setValueOf(t=[0,0],i){Array.isArray(t)||(i=t,t=[0,0]);const[r,e]=this.#i(t);if(!(r<0||e<0)){if(null!=i)return this.#t[r][e]=i,i;console.log("value is missing.")}}static isMatrix(t){return t instanceof this}fill(t=null,i=[0,0],r=[this.row-1,this.#t[this.row-1].length]){const[e,h]=this.#r(i),[n,s]=this.#e(r);if(e>this.row||e>n||n==e&&h>=s)return this.#t;if(n<0||s<0)return this.#t;for(let i=e;i<=n;i++)for(let r=i==e?h:0;r<(i==n?s:this.#t[i].length);r++)this.#t[i][r]="function"==typeof t?t(this.#t[i][r],[i,r],this.#t):t;let l=new Matrix(this.#t.length,this.#t[0].length);return l.value=this.#t,l}reverse(t="col"){t.includes("col")&&(this.#t=this.#t.map(((t,i)=>t.map(((i,r)=>t[t.length-1-r]))))),t.includes("row")&&(this.#t=this.#t.map(((t,i)=>this.#t[this.#t.length-1-i])));let i=new Matrix(this.#t.length,this.#t[0].length);return i.value=this.#t,i}sort(t=((t,i)=>t<i?-1:t>i?1:0),i="col"){if("function"!=typeof t&&(i=t,t=(t,i)=>t<i?-1:t>i?1:0),"col"!==i&&"row"!==i)return this.#t;if("col"==i&&(this.#t=this.#t.map(((i,r)=>i.sort(t)))),"row"==i){let i=this.#t.flat();i=i.sort(t);let r=[],e=[];i.forEach(((t,i)=>{r.push(t),(i+1)%this.#t[0].length==0&&(e.push(r),r=[])})),this.#t=e}let r=new Matrix(this.#t.length,this.#t[0].length);return r.value=this.#t,r}map(t,i){if(null==t)return void console.log("undefined is not a function");void 0!==i&&(t=t.bind(i));let r=this.#t.map(((i,r)=>i.map(((i,e)=>t(i,[r,e],this.#t))))),e=new Matrix(r.length,r[0].length);return e.value=r,e}filter(t,i){if(null==t)return void console.log("undefined is not a function");void 0!==i&&(t=t.bind(i));let r=this.#t.map(((i,r)=>i.map(((i,e)=>1==t(i,[r,e],this.#t)?i:null))));r=r.flat(2).filter((t=>null!==t));let e=[];if(r.length>0){let t=[];r.forEach(((i,h)=>{t.push(i),(h+1)%this.column!=0&&h!=r.length-1||(e.push(t),t=[])}))}let h=new Matrix(e.length,e[0].length);return h.value=e,h}forEach(t,i){null!=t?(void 0!==i&&(t=t.bind(i)),this.#t.forEach(((i,r)=>i.forEach(((i,e)=>t(i,[r,e],this.#t)))))):console.log("undefined is not a function")}flat(t=1){let i=new Matrix(this.#t.length,this.#t[0].length);return i.value=this.#t.map((i=>i.flat(t))),i}find(t,i){if(null!=t){void 0!==i&&(t=t.bind(i));for(let i=0;i<this.#t.length;i++)for(let r=0;r<this.#t[i].length;r++)if(!0===t(this.#t[i][r],[i,r],this.#t))return this.#t[i][r]}else console.log("undefined is not a function")}findIndex(t,i){if(null!=t){void 0!==i&&(t=t.bind(i));for(let i=0;i<this.#t.length;i++)for(let r=0;r<this.#t[i].length;r++)if(!0===t(this.#t[i][r],[i,r],this.#t))return[i,r];return[-1,-1]}console.log("function is missing.")}findLast(t,i){if(null!=t){void 0!==i&&(t=t.bind(i));for(let i=this.#t.length-1;i>=0;i--)for(let r=this.#t[i].length-1;r>=0;r--)if(!0===t(this.#t[i][r],[i,r],this.#t))return this.#t[i][r]}}findLastIndex(t,i){void 0!==i&&(t=t.bind(i));for(let i=this.#t.length-1;i>=0;i--)for(let r=this.#t[i].length-1;r>=0;r--)if(!0===t(this.#t[i][r],[i,r],this.#t))return[i,r];return[-1,-1]}indexOf(t,i=[0,0]){if(null==t)return[-1,-1];const[r,e]=this.#r(i);if(r>this.row-1)return[-1,-1];for(let i=r;i<this.#t.length;i++)for(let h=i==r?e:0;h<this.#t[i].length;h++)if(this.#t[i][h]===t)return[i,h];return[-1,-1]}lastIndexOf(t,i=[this.row-1,this.#t[this.row-1].length-1]){if(null==t)return[-1,-1];const[r,e]=this.#h(i);if(r<0)return[-1,-1];for(let i=r;i>=0;i--)for(let h=i==r?e:this.#t[i].length-1;h>=0;h--)if(this.#t[i][h]===t)return[i,h];return[-1,-1]}includes(t,i=[0,0]){if(null==t)return!1;const[r,e]=this.#r(i);if(r>this.row-1)return!1;for(let i=r;i<this.#t.length;i++)for(let h=i==r?e:0;h<this.#t[i].length;h++)if(this.#t[i][h]===t)return!0;return!1}at(t=[0,0]){let[i,r]=this.#i(t);if(!(i>this.row-1||i<0))return this.#t[i][r]}join(t=","){return this.#t.map((i=>i.join(t))).join(t)}concat(){let t=JSON.parse(JSON.stringify(this.#t));switch(arguments[arguments.length-1]){case"col":if(1==arguments.length)break;let i=t[0].length,r=0;t.forEach(((t,e)=>{i>t.length&&(i=t.length,r=e)}));for(let i=0;i<arguments.length-1;i++){let e=arguments[i];if(Matrix.isMatrix(e)&&(e=e.value),Array.isArray(e)||1!=!e[Symbol.isConcatSpreadable])for(let i=0;i<e.length;i++)Array.isArray(e[i])?(t[r]=r>t.length?[...e[i]]:[...t[r],...e[i]],r++,r=r>this.row-1?0:r):(t[r]=r>t.length?[e[i]]:[...t[r],e[i]],r++,r=r>this.row-1?0:r);else t[r]=[...t[r],e],r++,r=r>this.row-1?0:r}break;default:t=t.flat(2);for(let i=0;i<arguments.length;i++){let r=arguments[i];if(Matrix.isMatrix(r)&&(r=r.value),Array.isArray(r)||1!=!r[Symbol.isConcatSpreadable])for(let i=0;i<r.length;i++)t=Array.isArray(r[i])?[...t,...r[i]]:[...t,r[i]];else t=[...t,r]}t=this.#n(t)}let i=new Matrix(t.length,t[0].length);return i.value=t,i}pop(){if(0==this.#t.length)return;let t="",i=[];return this.#t.forEach(((r,e)=>{e==this.row-1&&r.forEach(((i,e)=>{e==r.length-1&&(t=r.pop())})),r.length>0&&i.push(r)})),this.#t=i,this.row=this.#t.length,0==this.row?this.column=0:this.column=this.#t[0].length,t}push(){if(0!=arguments.length){for(let t=0;t<arguments.length;t++)this.#t[this.row-1].push(arguments[t]);return this.#t=this.#n(this.#t),this.row=this.#t.length,this.column=this.#t[0].length,this.#t[this.#t.length-1].length}}shift(){if(0==this.#t.length||0==this.#t[0].length)return;let t=this.#t[0].shift();return this.#t=this.#n(this.#t),this.row=this.#t.length,this.column=this.#t[0].length,t}unshift(t){if(null!=t)return this.#t[0].unshift(t),this.#t=this.#n(this.#t),this.row=this.#t.length,this.column=this.#t[0].length,this.#t[this.#t.length-1].length}slice(t=[0,0],i=[this.row-1,this.column]){const[r,e]=this.#r(t),[h,n]=this.#e(i);if(r>this.row||r>h||h==r&&e>=n)return[];if(h<0&&n<0)return[];let s=[];for(let t=0;t<this.row;t++){let i=this.#t[t];if(!(t<r||t>h))for(let l=0;l<i.length;l++){let a=i[l];t==r&&l<e||(t==h&&l>=n||s.push(a))}}let l=this.#n(s),a=new Matrix(l.length,l[0].length);return a.value=l,a}splice(){if(null==arguments[0])return[];if(!Array.isArray(arguments[0]))return[];if(2!=arguments[0].length)return[];let[t,i]=this.#r(arguments[0]),r=null==arguments[1]?this.row*this.column:arguments[1],e=[];if(r>0&&t<=this.row-1)for(let h=0;h<r&&(i>this.#t[t].length-1&&(t++,i=0),!(t>this.#t.length-1||t==this.#t.length-1&&i>this.#t[t].length-1));h++)e.push(this.#t[t][i]),this.#t[t][i]="!!ToBeRemovedSoon!!",i++;let h=this.#t.flat().filter((t=>"!!ToBeRemovedSoon!!"!==t));[t,i]=this.#r(arguments[0]);let n=1==this.row?i:t*this.column+i;if(void 0!==arguments[2]&&n<h.length-1)for(let t=2;t<arguments.length;t++){let i=arguments[t];h.splice(n+t-2,0,i)}return this.#t=this.#n(h),this.row=this.#t.length,this.column=this.#t[0].length,e}every(t,i){void 0!==i&&(t=t.bind(i));for(let i=0;i<this.#t.length;i++)for(let r=0;r<this.#t[i].length;r++)if(!1===t(this.#t[i][r],[i,r],this.#t))return!1;return!0}some(t,i){void 0!==i&&(t=t.bind(i));for(let i=0;i<this.#t.length;i++)for(let r=0;r<this.#t[i].length;r++)if(!0===t(this.#t[i][r],[i,r],this.#t))return!0;return!1}reduce(t,i){let r,e,h=0;if(0!=this.#t.flat(2).length){null==i?(h=1,e=this.#t[0][0]):e=i;for(let i=0;i<this.#t.length;i++)for(let n=0==i?h:0;n<this.#t[i].length;n++)r=t(e,this.#t[i][n],[i,n],this.#t),e=r;return r}}reduceRight(t,i){let r,e,h=this.#t[this.row-1].length-1,n=this.row-1;if(0!=this.#t.flat(2).length){if(null==i){if(h=this.#t[n].length-2,h<0){if(n--,n<0)return this.#t[this.row-1][this.column-1];h=this.#t[n].length-1}e=this.#t[0][0]}else e=i;for(let i=n;i>=0;i--)for(let s=i==n?h:this.#t[i].length-1;s>=0;s--)r=t(e,this.#t[i][s],[i,s],this.#t),e=r;return r}}values(){return function*(){for(let t=0;t<this.row;t++)for(let i=0;i<this.#t[t].length;i++)yield this.#t[t][i]}.bind(this)()}entries(){return function*(){for(let t=0;t<this.row;t++)for(let i=0;i<this.#t[t].length;i++)yield[[t,i],this.#t[t][i]]}.bind(this)()}keys(){return function*(){for(let t=0;t<this.row;t++)for(let i=0;i<this.#t[t].length;i++)yield[t,i]}.bind(this)()}toString(){return this.#t.toString()}copyWithin(t=[0,0],i=[0,0],r=[this.row-1,this.#t[this.row].length]){if((t=this.#r(t))[0]>this.row-1)return this;if((i=this.#r(i))[0]>this.row-1)return this;r=this.#e(r);let e=1==this.row?t[1]:t[0]*this.column+t[1],h=1==this.row?i[1]:i[0]*this.column+i[1],n=1==this.row?r[1]:r[0]*this.column+r[1],s=this.#t.flat(3).copyWithin(e,h,n),l=[];if(s.length>0){let t=[];s.forEach(((i,r)=>{t.push(i),(r+1)%this.column!=0&&r!=s.length-1||(l.push(t),t=[])}))}return this.#t=l,this}#i(t){let[i,r]=t;return i=i<0?this.row+i:i,r=r<0?this.column+r:r,[i,r]}#r(t){let[i,r]=t;return i=i<0?this.row+i:i,i=i<0?0:i,r<0&&(r=this.#t[i].length+r),r=r<0?0:r,i==this.row-1&&r>this.#t[i].length-1&&(i=this.row),i<this.row-1&&r>this.column-1&&(i++,r=0),[i,r]}#h(t){let[i,r]=t;return i=i<0?this.row+i:i,i=i>this.row-1?this.row-1:i,r<0&&(r=this.#t[i].length+r),r=r>this.#t[i].length-1?this.#t[i].length-1:r,0==i&&r<0&&(i=-1),i>0&&r<0&&(i--,r=this.#t[i].length-1),[i,r]}#e(t){let[i,r]=t;return i<0&&(i=this.row+i),i=i>this.row-1?this.row-1:i,r<0&&(r=this.#t[i].length+r),r=r>this.#t[i].length?this.#t[i].length:r,0==i&&r<1&&(i=-1),i>0&&r<=0&&(i--,r=this.#t[i].length),[i,r]}#n(t){t=t.flat();let i=[],r=[];return t.forEach(((e,h)=>{r.push(e),(h+1)%this.column!=0&&h!=t.length-1||(i.push(r),r=[])})),i}}